apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: vault-stack
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.12.0
        imagePullPolicy: IfNotPresent
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "https://elasticsearch:9200"
        - name: ELASTICSEARCH_USERNAME
          value: "kibana_system"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: kibana-password
        - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
          value: "config/certs/ca.crt"
        - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
          value: "certificate"
        - name: SERVER_SSL_ENABLED
          value: "true"
        - name: SERVER_SSL_CERTIFICATE
          value: "config/certs/kibana.crt"
        - name: SERVER_SSL_KEY
          value: "config/certs/kibana.key"
        - name: SERVER_SSL_CERTIFICATEAUTHORITIES
          value: "config/certs/ca.crt"
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: xpack-encryption-keys
              key: encryption-key
        - name: XPACK_REPORTING_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: xpack-encryption-keys
              key: encryption-key
        - name: XPACK_SECURITY_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: xpack-encryption-keys
              key: encryption-key
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
        volumeMounts:
        - name: kibana-data
          mountPath: /usr/share/kibana/data
        - name: kibana-certs
          mountPath: /usr/share/kibana/config/certs
          readOnly: true
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -f --cacert config/certs/ca.crt https://localhost:5601/api/status || exit 1
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -f --cacert config/certs/ca.crt https://localhost:5601/api/status || exit 1
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: kibana-data
        persistentVolumeClaim:
          claimName: kibana-data-pvc
      - name: kibana-certs
        secret:
          secretName: kibana-certs