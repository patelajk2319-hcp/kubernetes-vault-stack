apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: vault-stack
  labels:
    app: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: increase-vm-max-map
        image: busybox:latest
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
        imagePullPolicy: IfNotPresent
        env:
        - name: discovery.type
          value: single-node
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.security.enrollment.enabled
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Xms256m -Xmx256m"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: elastic-password
        - name: xpack.security.http.ssl.enabled
          value: "true"
        - name: xpack.security.http.ssl.key
          value: certs/elasticsearch.key
        - name: xpack.security.http.ssl.certificate
          value: certs/elasticsearch.crt
        - name: xpack.security.http.ssl.certificate_authorities
          value: certs/ca.crt
        - name: xpack.security.http.ssl.verification_mode
          value: certificate
        - name: xpack.security.transport.ssl.enabled
          value: "true"
        - name: xpack.security.transport.ssl.key
          value: certs/elasticsearch.key
        - name: xpack.security.transport.ssl.certificate
          value: certs/elasticsearch.crt
        - name: xpack.security.transport.ssl.certificate_authorities
          value: certs/ca.crt
        - name: xpack.security.transport.ssl.verification_mode
          value: certificate
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-certs
          mountPath: /usr/share/elasticsearch/config/certs
          readOnly: true
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s --cacert config/certs/ca.crt -u elastic:$ELASTIC_PASSWORD https://localhost:9200/_cluster/health || exit 1
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -s --cacert config/certs/ca.crt -u elastic:$ELASTIC_PASSWORD https://localhost:9200/_cluster/health || exit 1
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data-pvc
      - name: elasticsearch-certs
        secret:
          secretName: elasticsearch-certs