apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: vault-stack
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        fsGroup: 10001
      initContainers:
      - name: loki-permission-fix
        image: busybox:latest
        command: ['sh', '-c', 'chown -R 10001:10001 /loki/data && chmod -R 755 /loki/data']
        volumeMounts:
        - name: loki-data
          mountPath: /loki/data
      containers:
      - name: loki
        image: docker.io/grafana/loki:latest
        imagePullPolicy: IfNotPresent
        args:
        - -config.file=/etc/loki/loki.yml
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 9096
          name: grpc
          protocol: TCP
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
          readOnly: true
        - name: loki-data
          mountPath: /loki/data
        livenessProbe:
          httpGet:
            path: /ready
            port: 3100
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-data
        persistentVolumeClaim:
          claimName: loki-data-pvc