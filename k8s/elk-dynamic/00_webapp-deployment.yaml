---
# Demo web application that uses dynamic Elasticsearch credentials from Vault
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elk-dynamic-webapp
  namespace: vault-stack
  labels:
    app: elk-dynamic-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elk-dynamic-webapp
  template:
    metadata:
      labels:
        app: elk-dynamic-webapp
      annotations:
        # Force pod restart when dynamic credentials are rotated
        vault.hashicorp.com/agent-inject: "false"
    spec:
      serviceAccountName: default
      containers:
        - name: webapp
          image: python:3.11-alpine
          command: ["/bin/sh"]
          args:
            - -c
            - |
              # Install required packages (elasticsearch<9 for compatibility with ES 8.12)
              pip install --no-cache-dir 'elasticsearch<9' requests urllib3 > /dev/null 2>&1

              cat > /tmp/app.py <<'PYEOF'
              from http.server import HTTPServer, BaseHTTPRequestHandler
              from elasticsearch import Elasticsearch
              import os
              import json
              import traceback
              from datetime import datetime

              class DynamicCredsHandler(BaseHTTPRequestHandler):
                  def do_GET(self):
                      html = self.generate_html()
                      self.send_response(200)
                      self.send_header('Content-type', 'text/html')
                      self.end_headers()
                      self.wfile.write(html.encode())

                  def generate_html(self):
                      # Read dynamic credentials from environment
                      es_username = os.getenv('ES_USERNAME', 'NOT_SET')
                      es_password = os.getenv('ES_PASSWORD', 'NOT_SET')

                      # Try to connect to Elasticsearch
                      connection_status = "Not attempted"
                      index_count = "N/A"
                      error_message = ""

                      try:
                          es = Elasticsearch(
                              "https://host.minikube.internal:9200",
                              basic_auth=(es_username, es_password),
                              verify_certs=False,
                              ssl_show_warn=False,
                              request_timeout=10,
                              max_retries=3,
                              retry_on_timeout=True
                          )

                          # Use info() instead of ping() for more reliable connection testing
                          info = es.info()
                          connection_status = "‚úÖ Connected successfully"
                          # Get index count
                          indices = es.cat.indices(format='json')
                          index_count = len(indices) if indices else 0
                      except Exception as e:
                          connection_status = "‚ùå Error connecting"
                          error_message = str(e)

                      return f'''<!DOCTYPE html>
              <html>
              <head>
                  <title>Vault Dynamic Elasticsearch Credentials</title>
                  <meta http-equiv="refresh" content="30">
                  <style>
                      body {{
                          font-family: Arial, sans-serif;
                          max-width: 900px;
                          margin: 50px auto;
                          padding: 20px;
                          background-color: #f5f5f5;
                      }}
                      .container {{
                          background-color: white;
                          border-radius: 8px;
                          padding: 30px;
                          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                      }}
                      h1 {{
                          color: #333;
                          border-bottom: 3px solid #7B42BC;
                          padding-bottom: 10px;
                      }}
                      h2 {{
                          color: #555;
                          margin-top: 30px;
                      }}
                      .credential-section {{
                          background-color: #f9f9f9;
                          border-left: 4px solid #7B42BC;
                          padding: 15px;
                          margin: 15px 0;
                      }}
                      .credential-item {{
                          margin: 10px 0;
                          font-family: monospace;
                          word-break: break-all;
                      }}
                      .label {{
                          font-weight: bold;
                          color: #666;
                      }}
                      .value {{
                          color: #7B42BC;
                      }}
                      .info {{
                          background-color: #e3f2fd;
                          border-left: 4px solid #2196f3;
                          padding: 15px;
                          margin: 20px 0;
                      }}
                      .success {{
                          background-color: #e8f5e9;
                          border-left: 4px solid #4caf50;
                          padding: 15px;
                          margin: 20px 0;
                      }}
                      .error {{
                          background-color: #ffebee;
                          border-left: 4px solid #f44336;
                          padding: 15px;
                          margin: 20px 0;
                      }}
                      .timestamp {{
                          color: #999;
                          font-size: 0.9em;
                          text-align: right;
                      }}
                      .code {{
                          background-color: #272822;
                          color: #f8f8f2;
                          padding: 10px;
                          border-radius: 4px;
                          overflow-x: auto;
                          font-family: monospace;
                          font-size: 0.9em;
                      }}
                  </style>
              </head>
              <body>
                  <div class="container">
                      <h1>üîê Vault Dynamic Elasticsearch Credentials</h1>

                      <div class="info">
                          <strong>‚ÑπÔ∏è About this demonstration:</strong><br>
                          This application demonstrates Vault's database secrets engine generating
                          <strong>dynamic, time-limited credentials</strong> for Elasticsearch.
                          Unlike static secrets, these credentials are automatically created,
                          rotated, and revoked by Vault.
                      </div>

                      <h2>üìä Current Dynamic Credentials</h2>
                      <div class="credential-section">
                          <div class="credential-item">
                              <span class="label">Username:</span> <span class="value">{es_username}</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Password:</span> <span class="value">{es_password[:20]}...</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Default TTL:</span> <span class="value">5 minutes</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Max TTL:</span> <span class="value">5 minutes</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Lease Renewal:</span> <span class="value">Every 60 seconds</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Credential Rotation:</span> <span class="value">Up to 5 minutes (when max TTL reached)</span>
                          </div>
                      </div>

                      <h2>üîå Elasticsearch Connection Test</h2>
                      <div class="credential-section">
                          <div class="credential-item">
                              <span class="label">Status:</span> <span class="value">{connection_status}</span>
                          </div>
                          <div class="credential-item">
                              <span class="label">Indices Count:</span> <span class="value">{index_count}</span>
                          </div>
                          {f'<div class="error"><strong>Error:</strong> {error_message}</div>' if error_message else ''}
                      </div>

                      <h2>üîÑ How It Works</h2>
                      <div class="info">
                          <ol>
                              <li><strong>Vault Database Secrets Engine</strong> is configured with Elasticsearch connection</li>
                              <li><strong>VaultDynamicSecret</strong> CRD requests credentials from Vault every 60 seconds</li>
                              <li><strong>Vault generates</strong> a new Elasticsearch user with defined permissions</li>
                              <li><strong>Credentials sync</strong> to Kubernetes secret automatically</li>
                              <li><strong>Application pod restarts</strong> to pick up new credentials</li>
                              <li><strong>Old credentials revoked</strong> by Vault after TTL expires</li>
                          </ol>
                      </div>

                      <h2>üß™ Understanding Credential Lifecycle</h2>
                      <div class="info">
                          <strong>Lease Renewal (every 60 seconds):</strong><br>
                          ‚Ä¢ Same username/password continues working<br>
                          ‚Ä¢ Lease duration refreshed to 5 minutes<br>
                          ‚Ä¢ No pod restart required<br>
                          <br>
                          <strong>Credential Rotation (every 5 minutes):</strong><br>
                          1. Note the current username above<br>
                          2. Wait approximately 5 minutes (max TTL reached)<br>
                          3. Vault creates NEW username/password<br>
                          4. Pod automatically restarts with new credentials<br>
                          5. Previous credentials are revoked by Vault<br>
                          6. Page shows the new username after restart
                      </div>

                      <div class="success">
                          <strong>‚úÖ Security Benefits:</strong><br>
                          ‚Ä¢ No long-lived credentials to manage or rotate manually<br>
                          ‚Ä¢ Automatic credential lifecycle management<br>
                          ‚Ä¢ Reduced blast radius if credentials are compromised<br>
                          ‚Ä¢ Full audit trail of credential generation and usage<br>
                          ‚Ä¢ Compliance with security policies requiring credential rotation
                      </div>

                      <div class="timestamp">
                          Last updated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')}<br>
                          Auto-refresh: 30 seconds
                      </div>
                  </div>
              </body>
              </html>'''

              if __name__ == '__main__':
                  server = HTTPServer(('0.0.0.0', 80), DynamicCredsHandler)
                  print('Starting server on port 80...')
                  server.serve_forever()
              PYEOF

              # Start the Python web server
              python3 /tmp/app.py

          ports:
            - containerPort: 80
          env:
            # Dynamic Elasticsearch credentials injected from Vault
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-dynamic-secret
                  key: username
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-dynamic-secret
                  key: password

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi

---
# Service to expose the webapp
apiVersion: v1
kind: Service
metadata:
  name: elk-dynamic-webapp-service
  namespace: vault-stack
  labels:
    app: elk-dynamic-webapp
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: elk-dynamic-webapp
